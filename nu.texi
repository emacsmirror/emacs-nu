\input texinfo @c -*-texinfo*-*
@setfilename nu.info
@documentencoding ISO-8859-1
@include version.texi
@settitle Nu-mode manual
@include macros.texi


@copying
This manual is for Nu (version @value{VERSION} of @value{UPDATED}),
a modern keybinding for Emacs.
Copyright @copyright{} 2014 @authors{}.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
A copy of the license is included in the section entitled
``GNU Free Documentation License''.
@end quotation

@end copying

@dircategory Emacs
@direntry
* Nu: (nu). Modern keybinding for Emacs.
@end direntry


@titlepage
@title Nu
@subtitle Modern keybinding for Emacs
@author @authors()
@page
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top Nu

This is the manual for Nu, a modern keybinding for Emacs.
@end ifnottex

@menu
* Overview::
* NU for the power user::
* Most Common Prompts::
* The Paddle::
* Cut Copy & Paste::
* Getting faster::
* GNU Free Documentation License::
@end menu

@node Overview
@chapter Overview

``Nu `` is a modern keybinding for Emacs.
Technically, it's a global minor mode, its keymap,
and the commands which are not provided in raw Emacs.

- Modern, means respecting conventions like ^f, ^s, ^c, ^v.i

- Emacs, implies there are lots of functions. To offer these, Nu uses
  prompts to allow one key, for example ^f, to offer several
  alternatives, like looking for a character or a regexp.



@node NU for the power user
@chapter NU for the power user

Mx is still there. C-h is there.
Use M-<SPC> to repeat a command.
Given these, you should be able to make your way :)

However describing keybinding will not be that simple,
this a function might have no direct map, while
being accessible throught a prompt.

C-c is not. Use C-<SPC>.

C-x is not. Use C-M-<SPC>.
Note that X-Prefix is not as useful under Nu than without,
since Nu provides accessor to some of these functions.

Keep this in mind & have a quick look at following manual.

@node Most Common Prompts
@chapter Most Common Prompts

While using Nu mode, most functions are accessible
using prompts.

Control-r will allow you to replace in an extended sense.

Control-f will allow you to research but also
go-to everywhere. Because Emacs users use Search to navigate.

Control-a will allow you to select anything, or simply ``set mark'',
be it classic or rectangle.

Control-g stands for global, & will handle frame/window manipulation.


@node The Paddle
@chapter The Paddle

While arrows still work, Nu uses alt key to navigate.
The thumb presses Alt key, while finger remains safe.
Navigate up left right down using Alt and :
 I
JKL

Additionally, use Alt u and alt o to move
to previous/next word.
U I O
 JKL

Use Alt$ to go to end of line.
The paddle remains true in order to select (``mark'') text.
While other ways are possible, using Alt-Shift-U, for example,
will select previous word (or extend current selection).


Use CTL + paddle keys to delete.
C-U, C-J, C-K... will delete word, previous char, line...

Alternatively, Alt-d will be explored later.

@node Cut Copy & Paste
@chapter Cut Copy & Paste
 
As usual, use Control-c to copy,
Control-x to cut, Control-v to paste. However

Control x and Control c, while no selection exists,
will operate on the current line.

Control v, repeated, will replace laste ``paste''
with the previous copy (kill-ring). Use M-v to obtain
more alternatives.

@node Getting faster
@chapter Getting faster

Hidden prompts
Hidden prompts do not use Control key because the introduce
more keys and would confuse.
Save prompt : alt s
Paste prompt : alt v.
Delete prompt : alt d.

@node GNU Free Documentation License
@appendix GNU Free Documentation License
@include fdl-1.3.texi

@bye
 
@c Local Variables:
@c mode: texinfo
@c TeX-master: t
@c sentence-end-double-space: t
@c End:
